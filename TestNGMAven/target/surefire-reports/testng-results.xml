<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-06-06T00:31:19 IST" name="Suite" finished-at="2020-06-06T00:31:19 IST" duration-ms="301">
    <groups>
    </groups>
    <test started-at="2020-06-06T00:31:19 IST" name="Test" finished-at="2020-06-06T00:31:19 IST" duration-ms="301">
      <class name="SuiteA.TestA">
        <test-method signature="TestB()[pri:0, instance:SuiteA.TestA@38d8f54a]" started-at="2020-06-06T00:31:19 IST" name="TestB" finished-at="2020-06-06T00:31:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestB -->
      </class> <!-- SuiteA.TestA -->
      <class name="SuiteA.TestB">
        <test-method signature="Test1()[pri:0, instance:SuiteA.TestB@49e53c76]" started-at="2020-06-06T00:31:19 IST" name="Test1" finished-at="2020-06-06T00:31:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
      </class> <!-- SuiteA.TestB -->
      <class name="Package1.DataProvideer">
        <test-method signature="Test1(java.lang.String, java.lang.String, int)[pri:0, instance:Package1.DataProvideer@409bf450]" started-at="2020-06-06T00:31:19 IST" name="Test1" data-provider="get" finished-at="2020-06-06T00:31:19 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dhanabal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17111985]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test1(java.lang.String, java.lang.String, int)[pri:0, instance:Package1.DataProvideer@409bf450]" started-at="2020-06-06T00:31:19 IST" name="Test1" data-provider="get" finished-at="2020-06-06T00:31:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Susai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17111984]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test2(java.lang.String, java.lang.String, int)[pri:0, instance:Package1.DataProvideer@409bf450]" started-at="2020-06-06T00:31:19 IST" name="Test2" data-provider="get" finished-at="2020-06-06T00:31:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dhanabal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17111985]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="Test2(java.lang.String, java.lang.String, int)[pri:0, instance:Package1.DataProvideer@409bf450]" started-at="2020-06-06T00:31:19 IST" name="Test2" data-provider="get" finished-at="2020-06-06T00:31:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Susai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17111984]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
      </class> <!-- Package1.DataProvideer -->
      <class name="SuiteB.SuiteBTEst">
        <test-method signature="searchSuiteB()[pri:0, instance:SuiteB.SuiteBTEst@351d00c0]" started-at="2020-06-06T00:31:19 IST" name="searchSuiteB" finished-at="2020-06-06T00:31:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSuiteB -->
      </class> <!-- SuiteB.SuiteBTEst -->
      <class name="Package1.AssertEx">
        <test-method signature="Test1()[pri:0, instance:Package1.AssertEx@2a3b5b47]" started-at="2020-06-06T00:31:19 IST" name="Test1" finished-at="2020-06-06T00:31:19 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
      </class> <!-- Package1.AssertEx -->
      <class name="Package1.TestNGClass">
        <test-method signature="Test3()[pri:3, instance:Package1.TestNGClass@55b699ef]" started-at="2020-06-06T00:31:19 IST" name="Test3" finished-at="2020-06-06T00:31:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method signature="Test2()[pri:2, instance:Package1.TestNGClass@55b699ef]" started-at="2020-06-06T00:31:19 IST" name="Test2" finished-at="2020-06-06T00:31:19 IST" depends-on-methods="Package1.TestNGClass.Test3" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="Test1()[pri:1, instance:Package1.TestNGClass@55b699ef]" started-at="2020-06-06T00:31:19 IST" name="Test1" finished-at="2020-06-06T00:31:19 IST" depends-on-methods="Package1.TestNGClass.Test2" duration-ms="2" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test
at Package1.TestNGClass.Test1(TestNGClass.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
      </class> <!-- Package1.TestNGClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
